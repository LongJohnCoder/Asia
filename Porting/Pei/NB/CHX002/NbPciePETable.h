/** @file
   ZX-E(CHX002) Asia NbPei library functions : NbPciePETable.h

   Copyright (c) 2018 Shanghai Zhaoxin Semiconductor Co., Ltd. 

**/


#ifndef __NB_PCIE_PE_TABLE_H__
#define __NB_PCIE_PE_TABLE_H__


//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//P table

STATIC ASIA_IO_TABLE_6432_REV D3F0PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x230<<32)),	0xf03ffff,	0xf03bfff},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV D3F1PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},   
	{0xFF,	0x00,	0x00,	0x00,	0x00}   
};

STATIC ASIA_IO_TABLE_6432_REV D3F2PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV D3F3PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV D4F0PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},

	{0xFF,	0x00,	0x00,	0x00,	0x00}
};

STATIC ASIA_IO_TABLE_6432_REV D4F1PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
    
	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},	
	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV D5F0PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},   
	{0xFF,	0x00,	0x00,	0x00,	0x00}
};

STATIC ASIA_IO_TABLE_6432_REV D5F1PerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1a0<<32)),	0xc0000,	0x80000},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1a4<<32)),	0x42,	0x2},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1ac<<32)),	0x7ff00,	0x0},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1b0<<32)),	0x7110103,	0x110103},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1b4<<32)),	0xf100007,	0xb100007},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1cc<<32)),	0x30100,	0x30100},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1d0<<32)),	0xffff0000,	0xffff0000},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1e0<<32)),	0x40ff0000,	0x40030000},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1e8<<32)),	0x38,	0x38},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x230<<32)),	0x3ffff,	0x3bfff},  
	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};


STATIC ASIA_IO_TABLE_6432_REV RCRBHPerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    		Value
// CJW_20170723 
//	0x00, 0xFF,	RCRBH_GFX_OCCUPANCY_TIMER, 		RCRBH_RGADSH, 	0x80,
//	0x00, 0xFF, RCRBH_C2P_RESERVE_TID_ABORT_ENABLE_AND_ISO_EN_AND_ISO_LOCK_ARBITRATION_AND_C2P_NP_PIPE_AND_P2P_ABNORMAL_CYCLE,		RCRBH_PEARB_PERF_EN,	0x20,

	{0x00,	0xFF,	0x238,	0x80,	0x80},

	{0x00,	0xFF,	0x290,	0x170,	0x170},

	{0x00,	0xFF,	0x298,	0x200000,	0x200000},

	{0x00,	0xFF,	0x29c,	0xf0,	0xf0},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV PCIEEPHYPerformanceMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value

	0xFF, 0x00,  	0x00,                       0x00,  	0x00
};

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//E table
 

STATIC ASIA_IO_TABLE_6432_REV D3F0EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1b4<<32)),	0x100000,	0x0},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE0|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV D3F1EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1b4<<32)),	0x100000,	0x0},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE1|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00}  

};

STATIC ASIA_IO_TABLE_6432_REV D3F2EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1b4<<32)),	0x100000,	0x0},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE2|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00}
};

STATIC ASIA_IO_TABLE_6432_REV D3F3EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1b4<<32)),	0x100000,	0x0},
	
	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE3|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00}
};

STATIC ASIA_IO_TABLE_6432_REV D4F0EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1b4<<32)),	0x100000,	0x0},
	
	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE4|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00}
};

STATIC ASIA_IO_TABLE_6432_REV D4F1EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1b4<<32)),	0x100000,	0x0},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE5|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};

STATIC ASIA_IO_TABLE_6432_REV D5F0EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1b4<<32)),	0x100000,	0x0},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE6|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00}

};

STATIC ASIA_IO_TABLE_6432_REV D5F1EnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1b4<<32)),	0x100000,	0x0},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1cc<<32)),	0x800,	0x800},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1d0<<32)),	0xffff0000,	0x0},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1e0<<32)),	0x40ff0000,	0x300000},

	{0x00,	0xFF,	(CHX002_PE7|((UINT64)0x1e8<<32)),	0x41,	0x41},

	{0xFF,	0x00,	0x00,	0x00,	0x00} 
};


STATIC ASIA_IO_TABLE_6432_REV RCRBHEnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
//CJW_20170723
//	0x00, 0xFF,	RCRBH_PCIE_ARBITRATION_CTL_PEARB_DYNAMIC_CLK_ENABLE, 		RCRBH_RARBDYNPM, 	0x40,
//	0x00, 0xFF, RCRBH_PCIE_ARBITRATION_CTL_PEARB_DYNAMIC_CLK_ENABLE,		RCRBH_RARBDYNPMUP,	0x20,
//	0x00, 0xFF, RCRBH_PCIE_ARBITRATION_CTL_PEARB_DYNAMIC_CLK_ENABLE,		RCRBH_RARBDYNPMDN,	0x10,
//	0x00, 0xFF, RCRBH_ATS_INVALIDATE_TIMEOUT_CTL,							RCRBH_RARBDYNPMAT,	0x01,
	{0xFF,	0x00,	0x00,	0x00,	0x00} 

};

STATIC ASIA_IO_TABLE_6432_REV PCIEEPHYEnergyMMIOTBL[]= {
    //  mVer MVer   Reg Offset                  Mask    Value
		0xFF, 0x00, 0x00,			  															0x00,  				0x00
};

#endif
